// -- written by groverbuger for g3d
// -- september 2021
// -- MIT license

require("g3d/grover3d.chai")
global g3d
global stage
global knight
global scene
global timer = 0
global firstDraw = true
global secondDraw = true
global drawCount = 0

def load() {
    // love.event.pause()
    g3d = grover3d()
    require("g3d/model.chai")
    //earth = g3d.model.newModel("assets/sphere.obj", "assets/earth.png", [4,0,0], false, 1.0)
    // love.event.pause()
    // moon = g3d.model.newModel("assets/sphere.obj", "assets/moon.png", [4,5,0], false, 0.5)
    // background = g3d.model.newModel("assets/sphere.obj", "assets/starfield.png", false, false, 500)
}

def update(dt) {
    timer = timer + dt
    // moon.setTranslation(cos(timer*1.0)*5 + 4, sin(timer*1.0)*5, 0)
    // moon.setRotation(0, 0, timer - 3.14159265358979323846/2)
    if (!firstDraw) {
        // earth.setRotation(0.0f, 0.0f, timer - 3.14159265358979323846f/2.0f*50.0f)
        // earth.setRotation(0.0f, 90.0f, 0.0f)
        
        // earth.setTranslation(0, earth.translation[1] + 0.5f * dt, 0)
        stage.setTranslation(0, stage.translation[1] + 0.5f * dt, 0)
    }
    g3d.camera.firstPersonMovement(dt)
    // if (love.keyboard.isDown("escape")) {
    //     love.event.push("quit")
    // }
}

def draw() {
    
    if (!firstDraw) {    
        
        // love.chai_gfx.setShader(g3d.shader)        
        // scene.draw()
        // knight.draw()
        // background.draw()
        
        // moon.draw()
        // love.chai_gfx.drawScene()
        g3d.shader.send("viewMatrix", g3d.camera.viewMatrix.matrix)
        love.window.showMessageBox("test")
        // scene.setMatrix(knight.matrix.matrix, 1)
        // love.window.showMessageBox("test")
        // scene.setMatrix(stage.matrix.matrix, 1)
        scene.draw()
        love.window.showMessageBox("test")
    }
    if (firstDraw) {
        // love.event.pause()
        
        g3d.shader = love.chai_gfx.newShader("g3d/g3d.vert")
        // earth = g3d.model.newModel("assets/knight2.obj", "assets/knight2.png", [4.0f,0.0f,0.0f], [5200.0f,0.0f,0.0f], [0.0125f,0.0125f,0.0125f])
        // earth = model()
        // earth.newModel("assets/knight3.glb", "assets/knight.png", [5.0f,0.0f,-1.0f], [10000.0f,0.0f,0.0f], [1.0f,1.0f,1.0f])
        stage = model()
        // stage.newModel("assets/testscene8.glb", "", [0.0f,0.0f,0.0f], [0.0f,0.0f,0.0f], [1.0f,1.0f,1.0f])
        stage.newModel("assets/finger3.glb", "", [0.0f,0.0f,0.0f], [0.0f,0.0f,0.0f], [1.0f,1.0f,1.0f])
        stage.initCamera()
        love.window.showMessageBox("test")
        knight = model()
        // knight.newModel("assets/knight_walk.glb", "", [0.0f,1.3f,10.0f], [0.0f,0.0f,0.0f], [5.0f,5.0f,5.0f])
        scene = love.chai_gfx.newScene()
        love.window.showMessageBox("test")
        scene.addMesh(stage.mesh)
        love.window.showMessageBox("test")
        // scene.addMesh(knight.mesh)
        // love.window.showMessageBox("test")
        scene.setShader(g3d.shader)
        love.window.showMessageBox("test")
        stage.playAnimation("Sample_cloud_fingerAction", true)

        // background = model()
        // background.newModel("assets/cube.glb", "assets/circuit.png", [0.0f,0.0f,0.0f], [0.0f,0.0f,0.0f], [500.0f,500.0f,500.0f])
        // moon = model()
        // moon.newModel("assets/plane.glb", "assets/grass.png", [0.0f,0.0f,-1.0f], [5000.0f,0.0f,0.0f], [500.0f,500.0f,500.0f])
        // moon = g3d.model.newModel("assets/sphere.obj", "assets/moon.png", [4,5,0], false, 0.5)
        // background = g3d.model.newModel("assets/sphere.obj", "assets/starfield.png", false, false, 500)
        // knight.playAnimation("Action.002", true)
        love.window.showMessageBox("test")
        firstDraw = false

    //     love.event.pause()
    } 
}

def mousemoved(x,y, dx,dy) {
    g3d.camera.firstPersonLook(dx,dy)
}

def reset() {

}

def joystickpressed(a, b) {

}

def joystickreleased(a, b) {

}

def mousepressed(a, b ,c) {

}

def mousereleased(a, b, c) {

}

def keypressed(a, b) {

}

def keyreleased(a, b) {

}

def savestate() {

}

def loadstate(a) {

}

def cheatreset() {

}

def cheatset(a, b, c) {

}

def exit() {

}
